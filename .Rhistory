get_alt_text(fish)
cDrv$stop()
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
install.packages(c("rvest","RSelenium","tidyverse","stringr","knitr"))
library(rvest)
library(RSelenium)
library(wdman)
tag <- "fish"
tag_url_base <- "https://www.instagram.com/explore/tags/"
url <- paste(tag_url_base,tag,"/",sep = "")
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
remDr$open()  #open driver
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
remDr$open()  #open driver
remDr$navigate(url)
page_source<-remDr$getPageSource()
img_text <- read_html(page_source[[1]]) %>% html_nodes("._2di5p") %>%
html_attr("alt")
remDr$close() #close driver
cDrv$stop()
cDrv$stop()
cDrv$process()
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
cDrv$process()
remDr$getStatus()
remDr$close() #close driver
remDr$open()  #open driver
remDr$getStatus()
remDr$close() #close driver
cDrv$stop()
remDr$open()  #open driver
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
remDr$open()  #open driver
cDrv$process()
remDr$getStatus()
cDrv$stop()
remDr$open()  #open driver
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
remDr$open()  #open driver
remDr$close() #close driver
remDr$open()  #open driver
remDr$close() #close driver
cDrv$output()
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
cDrv$output()
cDrv$error()
cDrv$stop()
remDr$open()  #open driver
cDrv$stop()
remDr$open()  #open driver
remDr$close() #close driver
cDrv$stop()
remDr$open()  #open driver
cDrv$stop()
remDr$open()  #open driver
remDr$open()  #open driver
cDrv$stop()
remDr$close() #close driver
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
remDr$open()  #open driver
cDrv$stop()
remDr$close() #close driver
?chrome
if(cDrv <- chrome(port = 4567L, check = TRUE)){
}
cDrv <- chrome(port = 4567L, check = TRUE)
cDrv <- chrome(port = 4567L, check = TRUE)
checkForServer()
?rSelenium
remDr <- remoteDriver(browserName = "chrome", port = 4567L) #establishes driver
rsDriver(check = TRUE)
install(instaExtract)
library(devtools)
install(instaExtract)
getwd()
setwd("..")
getwd()
install(instaExtract)
install("instaExtract"")
install("instaExtract")
setwd("./instaExtract")
document()
install.packages(c("rvest", "RSelenium", "tidyverse", "stringr", "knitr"))
setwd("..")
install("instaExtract")
getwd()
setwd("..")
library(devtools)
install("instaExtract")
install("instaExtract")
get_alt_text(latte)
library(instaExtract)
get_alt_text(latte)
get_alt_text("latte")
exists(remDr)
exists("remDr")
install("instaExtract")
install("instaExtract")
library(instaExtract)
get_alt_text("latte")
install("instaExtract")
library(instaExtract)
get_alt_text("latte")
start_driver()
start_driver(browser= "chrome")
remDr <- remoteDriver(browserName = "IE", port = 4567L) #establishes driver
library(RSelenium)
library(wdman)
remDr <- remoteDriver(browserName = "IE", port = 4567L) #establishes driver
remDr$open()
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
remDr$open()
remDr$open()
remDr$close() #close driver
remDr$close() #close driver
remDr <- remoteDriver(browserName = "IE", port = 4567L) #establishes driver
remDr$open()
remDr$close() #close driver
cDrv <- chrome(port = 4567L)  # creates folder for binaries of server in AppData
cDrv$process()
cDrv$log()
install("instaExtract")
library(instaExtract)
get_alt_text("latte")
install("instaExtract")
library(instaExtract)
get_alt_text("latte")
install("instaExtract")
get_alt_text("latte")
library(instaExtract)
install("instaExtract")
library(instaExtract)
get_alt_text("latte")
library(dplyr)
get_alt_text("latte")
get_alt_text("latte")
install("instaExtract")
library(dplyr)
library(instaExtract)
get_alt_text("latte")
library(tidyverse)
get_alt_text("latte")
libary(rvest)
library(rvest)
read_html()
?read_html
install("rvest")
install.packages("rvest")
install.packages("rvest")
library(rvest)
get_alt_text("latte")
remDr$open()
latte_text <- get_alt_text("latte")
install("instaExtract")
library(instaExtract)
latte_text <- get_alt_text("latte")
install("instaExtract")
library(instaExtract)
latte_text <- get_alt_text("latte")
fish_text <- get_alt_text("fish")
lilbrary(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
install("instaExtract")
setwd("..")
install("instaExtract")
library(instaExtract)
get_alt_text("weiner")
get_alt_text("fursona")
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
tag = "fish"
n = 20
maxID = ""
raw_data <- getURL(paste("https://www.instagram.com/explore/tags/",tag,"/?__a=1&max_id=",maxID))
url <- paste("https://www.instagram.com/explore/tags/",tag,"/?__a=1&max_id=",maxID)
read_json(url)
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
tag = "fish"
n = 20
maxID = ""
url <- paste("https://www.instagram.com/explore/tags/",tag,"/?__a=1&max_id=",maxID, sep = "")
unser_data <- fromJSON(url)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
library(devtools)
install("instaExtract")
setwd("..")
install("instaExtract")
library(instaExtract)
getwd()
install("instaExtract")
library(devtools)
install("instaExtract")
setwd("..")
install("instaExtract")
isntall.packages("jsonlite")
install.packages("jsonlite")
isntall.package("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("devtools")
getwd()
setwd("..")
install("instaExtract")
library(devtools)
install("instaExtract")
library(instaExtract)
library(jsonlite)
fish <- getMediaByTag("fish")
install("instaExtract")
install("instaExtract")
install("instaExtract")
detach("package:jsonlite", unload=TRUE)
install("instaExtract")
library("jsonlite", lib.loc="~/R/win-library/3.4")
library("devtools", lib.loc="~/R/win-library/3.4")
install("instaExtract")
setwd("..")
install("instaExtract")
fish <- getMediaByTag("fish")
library(instaExtract)
fish <- getMediaByTag("fish")
View(fish)
View(fish)
colnames(fish)
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",tag, sep = "")
tag=fish
tag="fish"
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",tag, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
jsonlite::flatten(data$hashtag$name)
jsonlite::flatten(data$hashtag)
tag="fresh"
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",tag, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
jsonlite::flatten(data$hashtag)
fresh <- flatten(data$hashtags)
fresh <- flatten(data$hashtag)
fresh <- jsonlite:flatten(data$hashtag)
fresh <- jsonlite::flatten(data$hashtag)
View(fresh)
View(fresh)
tag="a"
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",tag, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
fresh <- jsonlite::flatten(data$hashtag)
fresh <- jsonlite::flatten(data$hashtags)
tag="at"
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",tag, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
fresh <- jsonlite::flatten(data$hashtags)
fresh <- jsonlite::flatten(data$hashtags$hashtag)
colnames(fresh)
username = "nectarie"
#create the url from the json link
url <- paste("https://www.instagram.com/web/search/topsearch/?query=",username, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
fresh<- jsonlite::flatten(data$accounts
}
fresh<- jsonlite::flatten(data$accounts)
fresh<- jsonlite::flatten(data$users)
colnames(fresh)
username <- "nectarie_"
#create the url from the json link
url <- paste("https://www.instagram.com/",username,"/?__a=1&max_id=",maxID, sep = "")
maxID <- ""
#create the url from the json link
url <- paste("https://www.instagram.com/",username,"/?__a=1&max_id=",maxID, sep = "")
#download the json data
data <- jsonlite::fromJSON(url)
fresh <- jsonlite::flatten(data$media$nodes)
fresh <- jsonlite::flatten(data$user$media$nodes)
colnames(fresh)
?gsub
install("instaExtract")
library(instaExtract)
getUserMediaJsonLink("nectarie_","")
install("instaExtract")
library(instaExtract)
getUserMediaJsonLink("nectarie_","")
install("instaExtract")
library(instaExtract)
getUserMediaJsonLink("nectarie_","")
username <- "nectarie_"
maxID <- ""
#create the url from the json link
url <- paste("https://www.instagram.com/",username,"/?__a=1&max_id=",maxID, sep = "")
url
install("instaExtract")
library(instaExtract)
getMediasByUsername("nectarie_")
getIDFromCode <- function(code){
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id = 0
for(i in code){
c = code[i]
id = id * 64+ regexpr(alphabet, c)
}
}
getIDFromCode(23451)
getIDFromCode <- function(code){
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id = 0
for(i in code){
c = code[i]
id = id * 64+ regexpr(alphabet, c)
}
return(id)
}
getIDFromCode(23451)
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id = 0
c = code[i]
code <- 234512
c = code[i]
getIDFromCode("23451")
code <- "23451"
c = code[i]
i <- 0
getIDFromCode <- function(code){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id <- 0
for(i in code){
c <- code[i]
id <- id * 64+ regexpr(alphabet, c)
}
return(id)
}
getIDFromCode("23451")
c <- code[i]
c <- code[1]
?substring
c <- substr(code,i,i)
for(i in code){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)
}
for(i in nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)
}
getIDFromCode <- function(code){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id <- 0
for(i in nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)
}
return(id)
}
getIDFromCode("23451")
regexpr(c, alphabet)
?regexpr
c <- substr(code,i,i)
c <- substr(code,3,3)
regexpr(c, alphabet)
regexpr(c, alphabet)[1]
getIDFromCode <- function(code){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id <- 0
for(i in nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)[1]
}
return(id)
}
getIDFromCode("asj23AS")
code<-"asj23AS"
for(i in nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)[1]
}
id
id <- id * 64+ regexpr(c, alphabet)[1]
id
id <- 0
for(i in nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)[1]
}
id <- 0
c <- substr(code,i,i)
i <- 0
c <- substr(code,i,i)
i <- i+ 1
c <- substr(code,i,i)
i in nchar(code)
for(i in 1:nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)[1]
}
getIDFromCode <- function(code){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
id <- 0
for(i in 1:nchar(code)){
c <- substr(code,i,i)
id <- id * 64+ regexpr(c, alphabet)[1]
}
return(id)
}
getIDFromCode("asj23AS")
getCodeFromID <- function(ID){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
code <- ""
while(id > 0){
remainder <- id %% 64
id <- (id - remainder) / 64
code <- paste(substr(alphabet,remainder,remainder),code)
}
}
getIDFromCode(id)
getIDFromCode(code)
getCodeFromID(id)
getCodeFromID <- function(ID){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
code <- ""
while(id > 0){
remainder <- id %% 64
id <- (id - remainder) / 64
code <- paste(substr(alphabet,remainder,remainder),code)
}
return(code)
}
getCodeFromID(id)
getCodeFromID <- function(ID){
alphabet <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
code <- ""
while(id > 0){
remainder <- id %% 64
id <- (id - remainder) / 64
code <- paste(substr(alphabet,remainder,remainder),code,sep="")
}
return(code)
}
getCodeFromID(id)
install.packages(instaExtract)
getwd()
setwd("..")
install.packages(instaExtract)
install.packages("instaExtract")
install.packages("instaExtract")
install("instaExtract")
getwd()
install.packages("instaExtract")
install.packages("instaExtract")
install.packages("instaExtract")
install.package("instaExtract")
install("instaExtract")
library(devtools)
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
b <- TRUE
a <- TRUE
a && b
i <- 0
n <- 20
i < 20 && b
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
data$tag$media$page_info$has_next_page
data$user$media$page_info$has_next_page
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
tag <- "coffee"
#create the url from Json Link
url <- getTagMediaJsonLink(tag,maxID)
response <- jsonlite::fromJSON(url)
(response$tag$media$page_info$has_next_page
response$tag$media$page_info$has_next_page
install("instaExtract")
library(instaExtract)
getMediaByTag("coffee",30)
coffee <- getMediaByTag("coffee", 30)
coffee <- getMediaByTag("coffee", 30)
View(coffee)
View(coffee)
