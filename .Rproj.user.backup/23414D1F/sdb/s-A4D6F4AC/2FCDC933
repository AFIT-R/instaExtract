{
    "collab_server" : "",
    "contents" : "# Get Medias By Tag\n#\n# this function outputs a data frame translated from a json download\n# from the instagram link.\n#\n#INPUTS:\n# tag - string that will be searched on instagram\n# n - number of images to look at\n# maxID - identifier to specify search location\n#\n#OUTPUTS:\n#\n# dataframe -  n x 14 dataframe of media information.\n# colnames : comments_disabled, id, thumbnail_src, thumbnail_resources,\n# is_video, code, date, display_src, caption, dimensions.height,\n# dimensions.width, owner.id, comments.count, likes.count\n\n\n\ngetMediaByTag <- function(tag, n = 20, maxID = \"\"){\n\n\n  #indexing variable\n  i <- 0\n\n  #boolean for checking on more data available\n  moreAvailable <- TRUE\n\n  #Empty data frame for rows to be addded to\n  data <- data.frame()\n\n\n  #will run while more data exists and it has not reached n results\n  while(moreAvailable && i < n){\n\n    #create the url from Json Link\n    url <- getTagMediaJsonLink(tag,maxID)\n\n    #the unflattened response\n    response <- jsonlite::fromJSON(url)\n\n    if(is.data.frame(response$graphql$hashtag$edge_hashtag_to_media$edges$node)){\n\n      #flattening the data down to the nodes, into a dataframe\n      media <- jsonlite::flatten(response$graphql$hashtag$edge_hashtag_to_media$edges$node)\n\n      #iterating over the rows of the media\n      for(row in 1:nrow(media)){\n\n        #will exit loop and return data if reaching the limit\n        if(i == n){\n          return(data)\n        }\n\n        #will add a new row of media to data\n        data <- rbind(data,media[row,])\n\n        #incrementing the counting index\n        i <- i + 1\n\n      }\n\n      #Where to start the next query to the instagram link\n      maxID <- response$graphql$hashtag$page_info$end_cursor\n      #makes sure more exists\n      moreAvailable <- response$graphql$hashtag$page_info$has_next_page\n\n    }\n\n    else{\n      return(response$graphql$hashtag$edge_hashtag_to_media$edges$node)\n    }\n\n\n\n  }\n\n  #convert the json data to R dataframe\n  return(data)\n}\n",
    "created" : 1517097693854.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3141011172",
    "id" : "2FCDC933",
    "lastKnownWriteTime" : 1517158191,
    "last_content_update" : 1517158191209,
    "path" : "C:/Users/Anthony/Dropbox/Thesis/instaExtract/instaExtract/R/getMediaByTag.R",
    "project_path" : "R/getMediaByTag.R",
    "properties" : {
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}